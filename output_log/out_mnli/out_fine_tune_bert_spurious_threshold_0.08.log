nohup: ignoring input
01/17/2025 18:43:06 - WARNING - __main__ -   Process rank: -1, device: cuda, n_gpu: 1, distributed training: False, 16-bits training: False
01/17/2025 18:43:06 - INFO - pytorch_transformers.configuration_utils -   loading configuration file mnli_bert_base/checkpoint-last/config.json
01/17/2025 18:43:06 - INFO - pytorch_transformers.configuration_utils -   Model config {
  "architectures": [
    "BertForMaskedLM"
  ],
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": "mnli",
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "model_type": "bert",
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 3,
  "output_attentions": false,
  "output_hidden_states": false,
  "pad_token_id": 0,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

01/17/2025 18:43:06 - INFO - pytorch_transformers.tokenization_utils -   Model name 'mnli_bert_base/checkpoint-last/' not found in model shortcut name list (bert-base-uncased, bert-large-uncased, bert-base-cased, bert-large-cased, bert-base-multilingual-uncased, bert-base-multilingual-cased, bert-base-chinese, bert-base-german-cased, bert-large-uncased-whole-word-masking, bert-large-cased-whole-word-masking, bert-large-uncased-whole-word-masking-finetuned-squad, bert-large-cased-whole-word-masking-finetuned-squad, bert-base-cased-finetuned-mrpc). Assuming 'mnli_bert_base/checkpoint-last/' is a path or url to a directory containing tokenizer files.
01/17/2025 18:43:06 - INFO - pytorch_transformers.tokenization_utils -   loading file mnli_bert_base/checkpoint-last/vocab.txt
01/17/2025 18:43:06 - INFO - pytorch_transformers.tokenization_utils -   loading file mnli_bert_base/checkpoint-last/added_tokens.json
01/17/2025 18:43:06 - INFO - pytorch_transformers.tokenization_utils -   loading file mnli_bert_base/checkpoint-last/special_tokens_map.json
01/17/2025 18:43:06 - INFO - pytorch_transformers.tokenization_utils -   loading file mnli_bert_base/checkpoint-last/tokenizer_config.json
01/17/2025 18:43:06 - INFO - pytorch_transformers.modeling_utils -   loading weights file mnli_bert_base/checkpoint-last/pytorch_model.bin
/home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/pytorch_transformers/modeling_utils.py:333: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state_dict = torch.load(resolved_archive_file, map_location='cpu')
01/17/2025 18:43:08 - INFO - __main__ -   Training/evaluation parameters Namespace(data_dir='/home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI', training_examples_ids='None', hard_examples='mnli_bert_base/important_examples_0.08.pkl', hard_type='forgettables_b', model_type='bert', model_name_or_path='bert-base-uncased', do_lower_case=True, avg_models=None, load_model='mnli_bert_base/checkpoint-last/', proportion=0.0, adam_beta0=0.9, task_name='mnli', stress_subtask=None, output_dir='mnli_bert_base_fbert_0.08/bert_base', config_name='', tokenizer_name='', cache_dir='', max_seq_length=128, do_train=True, do_eval=False, evaluate_during_training=False, per_gpu_train_batch_size=32, per_gpu_eval_batch_size=32, gradient_accumulation_steps=1, learning_rate=5e-06, weight_decay=0.0, adam_epsilon=1e-08, decay_learning_rate=True, max_grad_norm=1.0, num_train_epochs=4.0, max_steps=-1, warmup_proportion=0.0, logging_steps=50, save_steps=500, eval_all_checkpoints=False, no_cuda=False, overwrite_output_dir=True, overwrite_cache=False, seed=0, fp16=False, fp16_opt_level='O1', local_rank=-1, eval_tasks=['mnli', 'hans'], test=False, n_gpu=1, device=device(type='cuda'), output_mode='classification')
01/17/2025 18:43:08 - INFO - utils_data -   Loading features from cached file /home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI/cached_train_bert-base-uncased_128_mnli
/home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/utils_data.py:36: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  features = torch.load(cached_features_file)
01/17/2025 18:43:23 - INFO - utils_data -   Dataset length: 392702.
01/17/2025 18:43:25 - INFO - __main__ -   Filtering dataset using hard examples: 23394
01/17/2025 18:43:26 - INFO - __main__ -   ***** Running training *****
01/17/2025 18:43:26 - INFO - __main__ -     Num examples = 23394
01/17/2025 18:43:26 - INFO - __main__ -     Num Epochs = 4
01/17/2025 18:43:26 - INFO - __main__ -     Instantaneous batch size per GPU = 32
01/17/2025 18:43:26 - INFO - __main__ -     Total train batch size (w. parallel, distributed & accumulation) = 32
01/17/2025 18:43:26 - INFO - __main__ -     Gradient Accumulation steps = 1
01/17/2025 18:43:26 - INFO - __main__ -     Total optimization steps = 2928
Epoch:   0%|          | 0/4 [00:00<?, ?it/s]01/17/2025 18:43:26 - INFO - utils_data -   Loading features from cached file /home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI/cached_dev_bert-base-uncased_128_mnli
/home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/utils_data.py:36: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  features = torch.load(cached_features_file)
01/17/2025 18:43:26 - INFO - utils_data -   Dataset length: 9815.
01/17/2025 18:43:26 - INFO - __main__ -   ***** Running evaluation mnli *****
01/17/2025 18:43:26 - INFO - __main__ -     Num examples = 9815
01/17/2025 18:43:26 - INFO - __main__ -     Batch size = 32

Evaluating:   0%|          | 0/307 [00:00<?, ?it/s][AEvaluating: 100%|██████████| 307/307 [00:28<00:00, 10.82it/s]
01/17/2025 18:43:54 - INFO - utils_data -   Loading features from cached file /home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI/cached_dev_bert-base-uncased_128_hans
01/17/2025 18:43:55 - INFO - utils_data -   Dataset length: 30000.
01/17/2025 18:43:55 - INFO - __main__ -   ***** Running evaluation hans *****
01/17/2025 18:43:55 - INFO - __main__ -     Num examples = 30000
01/17/2025 18:43:55 - INFO - __main__ -     Batch size = 32

Evaluating:   0%|          | 0/938 [00:00<?, ?it/s][A
Evaluating:  67%|██████▋   | 627/938 [01:00<00:29, 10.45it/s][A
Evaluating:  67%|██████▋   | 627/938 [01:10<00:29, 10.45it/s][AEvaluating: 100%|██████████| 938/938 [01:29<00:00, 10.48it/s]
01/17/2025 18:45:25 - INFO - __main__ -   Saving model checkpoint to mnli_bert_base_fbert_0.08/bert_base/checkpoint-epoch--1
   mnli.acc  hans.acc
0  0.841977  0.695467

Iteration:   0%|          | 0/732 [00:00<?, ?it/s][A/home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/pytorch_transformers/optimization.py:166: UserWarning: This overload of add_ is deprecated:
	add_(Number alpha, Tensor other)
Consider using one of the following signatures instead:
	add_(Tensor other, *, Number alpha = 1) (Triggered internally at ../torch/csrc/utils/python_arg_parser.cpp:1642.)
  exp_avg.mul_(beta1).add_(1.0 - beta1, grad)

Loss: 0.656, Acc: 0.812:   5%|▍         | 34/732 [00:10<03:25,  3.39it/s][A
Loss: 0.244, Acc: 0.875:   9%|▉         | 69/732 [00:20<03:13,  3.42it/s][A
Loss: 0.529, Acc: 0.812:  14%|█▍        | 104/732 [00:30<03:03,  3.43it/s][A
Loss: 0.582, Acc: 0.719:  14%|█▍        | 104/732 [00:40<03:03,  3.43it/s][A
Loss: 0.238, Acc: 0.906:  19%|█▉        | 139/732 [00:40<02:52,  3.43it/s][A
Loss: 0.341, Acc: 0.875:  24%|██▍       | 174/732 [00:50<02:43,  3.42it/s][A
Loss: 0.406, Acc: 0.844:  29%|██▊       | 209/732 [01:01<02:33,  3.42it/s][A
Loss: 0.488, Acc: 0.750:  33%|███▎      | 244/732 [01:11<02:22,  3.42it/s][A
Loss: 0.366, Acc: 0.844:  38%|███▊      | 279/732 [01:21<02:12,  3.41it/s][A
Loss: 0.504, Acc: 0.781:  43%|████▎     | 314/732 [01:31<02:02,  3.41it/s][A
Loss: 0.320, Acc: 0.906:  48%|████▊     | 349/732 [01:42<01:52,  3.41it/s][A
Loss: 0.535, Acc: 0.781:  52%|█████▏    | 384/732 [01:52<01:42,  3.38it/s][A
Loss: 0.541, Acc: 0.750:  57%|█████▋    | 418/732 [02:02<01:32,  3.38it/s][A
Loss: 0.400, Acc: 0.844:  62%|██████▏   | 452/732 [02:12<01:22,  3.38it/s][A
Loss: 0.472, Acc: 0.781:  66%|██████▋   | 486/732 [02:22<01:12,  3.38it/s][A
Loss: 0.335, Acc: 0.844:  71%|███████   | 520/732 [02:32<01:02,  3.38it/s][A
Loss: 0.498, Acc: 0.750:  76%|███████▌  | 554/732 [02:43<00:52,  3.38it/s][A
Loss: 0.441, Acc: 0.844:  80%|████████  | 588/732 [02:53<00:42,  3.38it/s][A
Loss: 0.582, Acc: 0.781:  85%|████████▍ | 622/732 [03:03<00:32,  3.37it/s][A
Loss: 0.543, Acc: 0.781:  90%|████████▉ | 656/732 [03:13<00:22,  3.35it/s][A
Loss: 0.157, Acc: 0.969:  94%|█████████▍| 689/732 [03:23<00:12,  3.34it/s][A
Loss: 0.365, Acc: 0.812:  99%|█████████▉| 723/732 [03:33<00:02,  3.33it/s][ALoss: 0.101, Acc: 1.000: 100%|██████████| 732/732 [03:36<00:00,  3.38it/s]
01/17/2025 18:49:02 - INFO - utils_data -   Loading features from cached file /home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI/cached_dev_bert-base-uncased_128_mnli
/home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/utils_data.py:36: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  features = torch.load(cached_features_file)
01/17/2025 18:49:03 - INFO - utils_data -   Dataset length: 9815.
01/17/2025 18:49:03 - INFO - __main__ -   ***** Running evaluation mnli *****
01/17/2025 18:49:03 - INFO - __main__ -     Num examples = 9815
01/17/2025 18:49:03 - INFO - __main__ -     Batch size = 32

Evaluating:   0%|          | 0/307 [00:00<?, ?it/s][AEvaluating: 100%|██████████| 307/307 [00:29<00:00, 10.27it/s]
01/17/2025 18:49:33 - INFO - utils_data -   Loading features from cached file /home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI/cached_dev_bert-base-uncased_128_hans
01/17/2025 18:49:34 - INFO - utils_data -   Dataset length: 30000.
01/17/2025 18:49:34 - INFO - __main__ -   ***** Running evaluation hans *****
01/17/2025 18:49:34 - INFO - __main__ -     Num examples = 30000
01/17/2025 18:49:34 - INFO - __main__ -     Batch size = 32

Evaluating:   0%|          | 0/938 [00:00<?, ?it/s][A
Evaluating:  67%|██████▋   | 628/938 [01:00<00:29, 10.45it/s][A
Evaluating:  67%|██████▋   | 628/938 [01:12<00:29, 10.45it/s][AEvaluating: 100%|██████████| 938/938 [01:29<00:00, 10.43it/s]
01/17/2025 18:51:04 - INFO - __main__ -   Saving model checkpoint to mnli_bert_base_fbert_0.08/bert_base/checkpoint-epoch-0
01/17/2025 18:51:04 - INFO - __main__ -   ***** Eval results mnli *****
01/17/2025 18:51:04 - INFO - __main__ -   mnli/acc = 0.8278145695364238
01/17/2025 18:51:04 - INFO - __main__ -   ***** Eval results hans *****
01/17/2025 18:51:04 - INFO - __main__ -   hans/acc = 0.7311
Epoch:  25%|██▌       | 1/4 [07:38<22:54, 458.32s/it]   mnli.acc  hans.acc
0  0.841977  0.695467
1  0.827815  0.731100

Iteration:   0%|          | 0/732 [00:00<?, ?it/s][A
Loss: 0.561, Acc: 0.812:   5%|▍         | 34/732 [00:10<03:28,  3.35it/s][A
Loss: 0.216, Acc: 0.938:   9%|▉         | 68/732 [00:20<03:16,  3.37it/s][A
Loss: 0.270, Acc: 0.906:  14%|█▍        | 102/732 [00:30<03:10,  3.31it/s][A
Loss: 0.457, Acc: 0.781:  18%|█▊        | 135/732 [00:40<03:01,  3.29it/s][A
Loss: 0.511, Acc: 0.781:  23%|██▎       | 168/732 [00:51<02:53,  3.25it/s][A
Loss: 0.466, Acc: 0.812:  28%|██▊       | 202/732 [01:01<02:40,  3.30it/s][A
Loss: 0.307, Acc: 0.875:  32%|███▏      | 236/732 [01:11<02:28,  3.33it/s][A
Loss: 0.356, Acc: 0.844:  37%|███▋      | 270/732 [01:21<02:17,  3.35it/s][A
Loss: 0.220, Acc: 0.969:  42%|████▏     | 304/732 [01:31<02:07,  3.36it/s][A
Loss: 0.244, Acc: 0.906:  46%|████▌     | 338/732 [01:41<01:56,  3.37it/s][A
Loss: 0.259, Acc: 0.906:  51%|█████     | 372/732 [01:51<01:46,  3.38it/s][A
Loss: 0.363, Acc: 0.844:  55%|█████▌    | 406/732 [02:01<01:36,  3.38it/s][A
Loss: 0.255, Acc: 0.906:  60%|██████    | 440/732 [02:11<01:26,  3.39it/s][A
Loss: 0.291, Acc: 0.875:  65%|██████▍   | 474/732 [02:21<01:16,  3.39it/s][A
Loss: 0.250, Acc: 0.875:  69%|██████▉   | 508/732 [02:31<01:06,  3.39it/s][A
Loss: 0.474, Acc: 0.781:  74%|███████▍  | 542/732 [02:41<00:56,  3.39it/s][A
Loss: 0.261, Acc: 0.938:  79%|███████▊  | 576/732 [02:51<00:45,  3.39it/s][A
Loss: 0.325, Acc: 0.812:  83%|████████▎ | 610/732 [03:01<00:35,  3.39it/s][A
Loss: 0.286, Acc: 0.906:  88%|████████▊ | 644/732 [03:11<00:25,  3.39it/s][A
Loss: 0.300, Acc: 0.875:  93%|█████████▎| 678/732 [03:21<00:15,  3.39it/s][A
Loss: 0.443, Acc: 0.781:  97%|█████████▋| 712/732 [03:31<00:05,  3.40it/s][ALoss: 0.039, Acc: 1.000: 100%|██████████| 732/732 [03:37<00:00,  3.37it/s]
01/17/2025 18:54:41 - INFO - utils_data -   Loading features from cached file /home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI/cached_dev_bert-base-uncased_128_mnli
/home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/utils_data.py:36: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  features = torch.load(cached_features_file)
01/17/2025 18:54:41 - INFO - utils_data -   Dataset length: 9815.
01/17/2025 18:54:41 - INFO - __main__ -   ***** Running evaluation mnli *****
01/17/2025 18:54:41 - INFO - __main__ -     Num examples = 9815
01/17/2025 18:54:41 - INFO - __main__ -     Batch size = 32

Evaluating:   0%|          | 0/307 [00:00<?, ?it/s][AEvaluating: 100%|██████████| 307/307 [00:29<00:00, 10.52it/s]
01/17/2025 18:55:11 - INFO - utils_data -   Loading features from cached file /home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI/cached_dev_bert-base-uncased_128_hans
01/17/2025 18:55:12 - INFO - utils_data -   Dataset length: 30000.
01/17/2025 18:55:12 - INFO - __main__ -   ***** Running evaluation hans *****
01/17/2025 18:55:12 - INFO - __main__ -     Num examples = 30000
01/17/2025 18:55:12 - INFO - __main__ -     Batch size = 32

Evaluating:   0%|          | 0/938 [00:00<?, ?it/s][A
Evaluating:  67%|██████▋   | 629/938 [01:00<00:29, 10.48it/s][A
Evaluating:  67%|██████▋   | 629/938 [01:14<00:29, 10.48it/s][AEvaluating: 100%|██████████| 938/938 [01:29<00:00, 10.48it/s]
01/17/2025 18:56:42 - INFO - __main__ -   Saving model checkpoint to mnli_bert_base_fbert_0.08/bert_base/checkpoint-epoch-1
01/17/2025 18:56:42 - INFO - __main__ -   ***** Eval results mnli *****
01/17/2025 18:56:42 - INFO - __main__ -   mnli/acc = 0.8265919510952624
01/17/2025 18:56:42 - INFO - __main__ -   ***** Eval results hans *****
01/17/2025 18:56:42 - INFO - __main__ -   hans/acc = 0.7351666666666666
Epoch:  50%|█████     | 2/4 [13:15<12:54, 387.29s/it]   mnli.acc  hans.acc
0  0.841977  0.695467
1  0.827815  0.731100
2  0.826592  0.735167

Iteration:   0%|          | 0/732 [00:00<?, ?it/s][A
Loss: 0.225, Acc: 0.875:   5%|▍         | 34/732 [00:10<03:26,  3.39it/s][A
Loss: 0.315, Acc: 0.938:   9%|▉         | 68/732 [00:20<03:18,  3.34it/s][A
Loss: 0.368, Acc: 0.906:  14%|█▍        | 103/732 [00:30<03:06,  3.38it/s][A
Loss: 0.284, Acc: 0.844:  19%|█▉        | 139/732 [00:40<02:52,  3.43it/s][A
Loss: 0.240, Acc: 0.906:  24%|██▍       | 175/732 [00:51<02:40,  3.46it/s][A
Loss: 0.327, Acc: 0.844:  29%|██▉       | 211/732 [01:01<02:29,  3.48it/s][A
Loss: 0.168, Acc: 0.969:  34%|███▎      | 247/732 [01:11<02:18,  3.49it/s][A
Loss: 0.175, Acc: 0.906:  39%|███▊      | 283/732 [01:21<02:08,  3.50it/s][A
Loss: 0.492, Acc: 0.844:  44%|████▎     | 319/732 [01:31<01:57,  3.50it/s][A
Loss: 0.109, Acc: 0.969:  48%|████▊     | 355/732 [01:42<01:47,  3.51it/s][A
Loss: 0.190, Acc: 0.938:  53%|█████▎    | 391/732 [01:52<01:37,  3.51it/s][A
Loss: 0.389, Acc: 0.875:  58%|█████▊    | 427/732 [02:02<01:26,  3.51it/s][A
Loss: 0.237, Acc: 0.906:  63%|██████▎   | 463/732 [02:12<01:16,  3.51it/s][A
Loss: 0.234, Acc: 0.906:  68%|██████▊   | 499/732 [02:23<01:06,  3.51it/s][A
Loss: 0.216, Acc: 0.844:  73%|███████▎  | 535/732 [02:33<00:56,  3.51it/s][A
Loss: 0.155, Acc: 0.969:  78%|███████▊  | 571/732 [02:43<00:45,  3.51it/s][A
Loss: 0.352, Acc: 0.906:  83%|████████▎ | 607/732 [02:53<00:35,  3.51it/s][A
Loss: 0.362, Acc: 0.875:  83%|████████▎ | 607/732 [03:04<00:35,  3.51it/s][A
Loss: 0.254, Acc: 0.906:  88%|████████▊ | 643/732 [03:04<00:25,  3.51it/s][A
Loss: 0.230, Acc: 0.844:  93%|█████████▎| 679/732 [03:14<00:15,  3.51it/s][A
Loss: 0.330, Acc: 0.844:  98%|█████████▊| 715/732 [03:24<00:04,  3.51it/s][ALoss: 0.116, Acc: 1.000: 100%|██████████| 732/732 [03:29<00:00,  3.50it/s]
01/17/2025 19:00:11 - INFO - utils_data -   Loading features from cached file /home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI/cached_dev_bert-base-uncased_128_mnli
/home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/utils_data.py:36: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  features = torch.load(cached_features_file)
01/17/2025 19:00:11 - INFO - utils_data -   Dataset length: 9815.
01/17/2025 19:00:11 - INFO - __main__ -   ***** Running evaluation mnli *****
01/17/2025 19:00:11 - INFO - __main__ -     Num examples = 9815
01/17/2025 19:00:11 - INFO - __main__ -     Batch size = 32

Evaluating:   0%|          | 0/307 [00:00<?, ?it/s][AEvaluating: 100%|██████████| 307/307 [00:28<00:00, 10.87it/s]
01/17/2025 19:00:40 - INFO - utils_data -   Loading features from cached file /home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI/cached_dev_bert-base-uncased_128_hans
01/17/2025 19:00:42 - INFO - utils_data -   Dataset length: 30000.
01/17/2025 19:00:42 - INFO - __main__ -   ***** Running evaluation hans *****
01/17/2025 19:00:42 - INFO - __main__ -     Num examples = 30000
01/17/2025 19:00:42 - INFO - __main__ -     Batch size = 32

Evaluating:   0%|          | 0/938 [00:00<?, ?it/s][A
Evaluating:  70%|██████▉   | 652/938 [01:00<00:26, 10.85it/s][A
Evaluating:  70%|██████▉   | 652/938 [01:14<00:26, 10.85it/s][AEvaluating: 100%|██████████| 938/938 [01:26<00:00, 10.84it/s]
01/17/2025 19:02:08 - INFO - __main__ -   Saving model checkpoint to mnli_bert_base_fbert_0.08/bert_base/checkpoint-epoch-2
01/17/2025 19:02:08 - INFO - __main__ -   ***** Eval results mnli *****
01/17/2025 19:02:08 - INFO - __main__ -   mnli/acc = 0.8251655629139073
01/17/2025 19:02:08 - INFO - __main__ -   ***** Eval results hans *****
01/17/2025 19:02:08 - INFO - __main__ -   hans/acc = 0.7322666666666666
Epoch:  75%|███████▌  | 3/4 [18:42<05:59, 359.68s/it]   mnli.acc  hans.acc
0  0.841977  0.695467
1  0.827815  0.731100
2  0.826592  0.735167
3  0.825166  0.732267

Iteration:   0%|          | 0/732 [00:00<?, ?it/s][A
Loss: 0.127, Acc: 0.938:   5%|▍         | 36/732 [00:10<03:18,  3.50it/s][A
Loss: 0.252, Acc: 0.875:  10%|▉         | 72/732 [00:20<03:08,  3.50it/s][A
Loss: 0.113, Acc: 0.969:  15%|█▍        | 108/732 [00:30<02:57,  3.51it/s][A
Loss: 0.242, Acc: 0.906:  20%|█▉        | 144/732 [00:41<02:47,  3.51it/s][A
Loss: 0.269, Acc: 0.906:  25%|██▍       | 180/732 [00:51<02:37,  3.51it/s][A
Loss: 0.255, Acc: 0.906:  30%|██▉       | 216/732 [01:01<02:26,  3.51it/s][A
Loss: 0.286, Acc: 0.844:  34%|███▍      | 252/732 [01:11<02:16,  3.51it/s][A
Loss: 0.394, Acc: 0.875:  39%|███▉      | 288/732 [01:22<02:06,  3.51it/s][A
Loss: 0.404, Acc: 0.812:  44%|████▍     | 324/732 [01:32<01:56,  3.51it/s][A
Loss: 0.122, Acc: 0.969:  49%|████▉     | 360/732 [01:42<01:45,  3.51it/s][A
Loss: 0.127, Acc: 0.969:  54%|█████▍    | 396/732 [01:52<01:35,  3.51it/s][A
Loss: 0.062, Acc: 1.000:  59%|█████▉    | 432/732 [02:03<01:25,  3.51it/s][A
Loss: 0.292, Acc: 0.875:  64%|██████▍   | 468/732 [02:13<01:15,  3.51it/s][A
Loss: 0.259, Acc: 0.906:  69%|██████▉   | 504/732 [02:23<01:04,  3.51it/s][A
Loss: 0.153, Acc: 0.969:  74%|███████▍  | 540/732 [02:33<00:54,  3.51it/s][A
Loss: 0.393, Acc: 0.906:  79%|███████▊  | 576/732 [02:44<00:44,  3.51it/s][A
Loss: 0.313, Acc: 0.875:  84%|████████▎ | 612/732 [02:54<00:34,  3.51it/s][A
Loss: 0.265, Acc: 0.906:  89%|████████▊ | 648/732 [03:04<00:23,  3.51it/s][A
Loss: 0.229, Acc: 0.938:  93%|█████████▎| 684/732 [03:14<00:13,  3.51it/s][A
Loss: 0.563, Acc: 0.844:  98%|█████████▊| 720/732 [03:25<00:03,  3.51it/s][ALoss: 0.427, Acc: 1.000: 100%|██████████| 732/732 [03:28<00:00,  3.51it/s]
01/17/2025 19:05:37 - INFO - utils_data -   Loading features from cached file /home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI/cached_dev_bert-base-uncased_128_mnli
/home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/utils_data.py:36: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  features = torch.load(cached_features_file)
01/17/2025 19:05:37 - INFO - utils_data -   Dataset length: 9815.
01/17/2025 19:05:37 - INFO - __main__ -   ***** Running evaluation mnli *****
01/17/2025 19:05:37 - INFO - __main__ -     Num examples = 9815
01/17/2025 19:05:37 - INFO - __main__ -     Batch size = 32

Evaluating:   0%|          | 0/307 [00:00<?, ?it/s][AEvaluating: 100%|██████████| 307/307 [00:28<00:00, 10.87it/s]
01/17/2025 19:06:05 - INFO - utils_data -   Loading features from cached file /home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI/cached_dev_bert-base-uncased_128_hans
01/17/2025 19:06:06 - INFO - utils_data -   Dataset length: 30000.
01/17/2025 19:06:06 - INFO - __main__ -   ***** Running evaluation hans *****
01/17/2025 19:06:06 - INFO - __main__ -     Num examples = 30000
01/17/2025 19:06:06 - INFO - __main__ -     Batch size = 32

Evaluating:   0%|          | 0/938 [00:00<?, ?it/s][A
Evaluating:  69%|██████▉   | 650/938 [01:00<00:26, 10.83it/s][A
Evaluating:  69%|██████▉   | 650/938 [01:19<00:26, 10.83it/s][AEvaluating: 100%|██████████| 938/938 [01:26<00:00, 10.83it/s]
01/17/2025 19:07:33 - INFO - __main__ -   Saving model checkpoint to mnli_bert_base_fbert_0.08/bert_base/checkpoint-last
01/17/2025 19:07:33 - INFO - __main__ -   ***** Eval results mnli *****
01/17/2025 19:07:33 - INFO - __main__ -   mnli/acc = 0.8245542536933266
01/17/2025 19:07:33 - INFO - __main__ -   ***** Eval results hans *****
01/17/2025 19:07:33 - INFO - __main__ -   hans/acc = 0.733
Epoch: 100%|██████████| 4/4 [24:07<00:00, 345.92s/it]Epoch: 100%|██████████| 4/4 [24:07<00:00, 361.88s/it]
   mnli.acc  hans.acc
0  0.841977  0.695467
1  0.827815  0.731100
2  0.826592  0.735167
3  0.825166  0.732267
4  0.824554  0.733000
{'data_dir': '~/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI',
 'decay_learning_rate': 'True',
 'do_lower_case': 'True',
 'do_train': '',
 'hard_examples': 'mnli_bert_base/important_examples_0.08.pkl',
 'hard_type': 'forgettables_b',
 'learning_rate': 5e-06,
 'load_model': 'mnli_bert_base/checkpoint-last/',
 'model_name_or_path': 'bert-base-uncased',
 'model_type': 'bert',
 'num_train_epochs': 4,
 'output_dir': PosixPath('mnli_bert_base_fbert_0.08/bert_base'),
 'overwrite_output_dir': '',
 'per_gpu_eval_batch_size': '32',
 'per_gpu_train_batch_size': 32,
 'seed': 0,
 'task_name': 'mnli',
 'training_examples_ids': None}
python exp_glue.py --per_gpu_eval_batch_size 32 --per_gpu_train_batch_size 32 --num_train_epochs 4 --decay_learning_rate True --do_lower_case True --learning_rate 5e-06 --model_name_or_path bert-base-uncased --model_type bert --data_dir ~/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI --task_name mnli --do_train  --overwrite_output_dir  --load_model mnli_bert_base/checkpoint-last/ --output_dir mnli_bert_base_fbert_0.08/bert_base --seed 0 --training_examples_ids None --hard_examples mnli_bert_base/important_examples_0.08.pkl --hard_type forgettables_b
