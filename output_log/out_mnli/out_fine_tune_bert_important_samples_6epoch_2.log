nohup: ignoring input
01/28/2025 10:38:27 - WARNING - __main__ -   Process rank: -1, device: cuda, n_gpu: 1, distributed training: False, 16-bits training: False
01/28/2025 10:38:27 - INFO - pytorch_transformers.configuration_utils -   loading configuration file mnli_bert_base/checkpoint-last/config.json
01/28/2025 10:38:27 - INFO - pytorch_transformers.configuration_utils -   Model config {
  "architectures": [
    "BertForMaskedLM"
  ],
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": "mnli",
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "model_type": "bert",
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 3,
  "output_attentions": false,
  "output_hidden_states": false,
  "pad_token_id": 0,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

01/28/2025 10:38:27 - INFO - pytorch_transformers.tokenization_utils -   Model name 'mnli_bert_base/checkpoint-last/' not found in model shortcut name list (bert-base-uncased, bert-large-uncased, bert-base-cased, bert-large-cased, bert-base-multilingual-uncased, bert-base-multilingual-cased, bert-base-chinese, bert-base-german-cased, bert-large-uncased-whole-word-masking, bert-large-cased-whole-word-masking, bert-large-uncased-whole-word-masking-finetuned-squad, bert-large-cased-whole-word-masking-finetuned-squad, bert-base-cased-finetuned-mrpc). Assuming 'mnli_bert_base/checkpoint-last/' is a path or url to a directory containing tokenizer files.
01/28/2025 10:38:27 - INFO - pytorch_transformers.tokenization_utils -   loading file mnli_bert_base/checkpoint-last/vocab.txt
01/28/2025 10:38:27 - INFO - pytorch_transformers.tokenization_utils -   loading file mnli_bert_base/checkpoint-last/added_tokens.json
01/28/2025 10:38:27 - INFO - pytorch_transformers.tokenization_utils -   loading file mnli_bert_base/checkpoint-last/special_tokens_map.json
01/28/2025 10:38:27 - INFO - pytorch_transformers.tokenization_utils -   loading file mnli_bert_base/checkpoint-last/tokenizer_config.json
01/28/2025 10:38:27 - INFO - pytorch_transformers.modeling_utils -   loading weights file mnli_bert_base/checkpoint-last/pytorch_model.bin
/home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/pytorch_transformers/modeling_utils.py:333: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state_dict = torch.load(resolved_archive_file, map_location='cpu')
01/28/2025 10:38:29 - INFO - __main__ -   Training/evaluation parameters Namespace(data_dir='/home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI', training_examples_ids='None', hard_examples='mnli_bert_base/important_examples.pkl', hard_type='forgettables_b', model_type='bert', model_name_or_path='bert-base-uncased', do_lower_case=True, avg_models=None, load_model='mnli_bert_base/checkpoint-last/', proportion=0.0, adam_beta0=0.9, task_name='mnli', stress_subtask=None, output_dir='mnli_bert_base_fbert_imp_6epoch/bert_base', config_name='', tokenizer_name='', cache_dir='', max_seq_length=128, do_train=True, do_eval=False, evaluate_during_training=False, per_gpu_train_batch_size=32, per_gpu_eval_batch_size=32, gradient_accumulation_steps=1, learning_rate=5e-06, weight_decay=0.0, adam_epsilon=1e-08, decay_learning_rate=True, max_grad_norm=1.0, num_train_epochs=6.0, max_steps=-1, warmup_proportion=0.0, logging_steps=50, save_steps=500, eval_all_checkpoints=False, no_cuda=False, overwrite_output_dir=True, overwrite_cache=False, seed=0, fp16=False, fp16_opt_level='O1', local_rank=-1, eval_tasks=['mnli', 'hans'], test=False, n_gpu=1, device=device(type='cuda'), output_mode='classification')
01/28/2025 10:38:29 - INFO - utils_data -   Loading features from cached file /home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI/cached_train_bert-base-uncased_128_mnli
/home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/utils_data.py:36: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  features = torch.load(cached_features_file)
01/28/2025 10:38:44 - INFO - utils_data -   Dataset length: 392702.
01/28/2025 10:38:46 - INFO - __main__ -   Filtering dataset using hard examples: 23391
01/28/2025 10:38:47 - INFO - __main__ -   ***** Running training *****
01/28/2025 10:38:47 - INFO - __main__ -     Num examples = 23391
01/28/2025 10:38:47 - INFO - __main__ -     Num Epochs = 6
01/28/2025 10:38:47 - INFO - __main__ -     Instantaneous batch size per GPU = 32
01/28/2025 10:38:47 - INFO - __main__ -     Total train batch size (w. parallel, distributed & accumulation) = 32
01/28/2025 10:38:47 - INFO - __main__ -     Gradient Accumulation steps = 1
01/28/2025 10:38:47 - INFO - __main__ -     Total optimization steps = 4386
Epoch:   0%|          | 0/6 [00:00<?, ?it/s]01/28/2025 10:38:47 - INFO - utils_data -   Loading features from cached file /home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI/cached_dev_bert-base-uncased_128_mnli
/home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/utils_data.py:36: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  features = torch.load(cached_features_file)
01/28/2025 10:38:47 - INFO - utils_data -   Dataset length: 9815.
01/28/2025 10:38:47 - INFO - __main__ -   ***** Running evaluation mnli *****
01/28/2025 10:38:47 - INFO - __main__ -     Num examples = 9815
01/28/2025 10:38:47 - INFO - __main__ -     Batch size = 32

Evaluating:   0%|          | 0/307 [00:00<?, ?it/s][AEvaluating: 100%|██████████| 307/307 [00:28<00:00, 10.89it/s]
01/28/2025 10:39:15 - INFO - utils_data -   Loading features from cached file /home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI/cached_dev_bert-base-uncased_128_hans
01/28/2025 10:39:16 - INFO - utils_data -   Dataset length: 30000.
01/28/2025 10:39:16 - INFO - __main__ -   ***** Running evaluation hans *****
01/28/2025 10:39:16 - INFO - __main__ -     Num examples = 30000
01/28/2025 10:39:16 - INFO - __main__ -     Batch size = 32

Evaluating:   0%|          | 0/938 [00:00<?, ?it/s][A
Evaluating:  68%|██████▊   | 637/938 [01:00<00:28, 10.61it/s][A
Evaluating:  68%|██████▊   | 637/938 [01:10<00:28, 10.61it/s][AEvaluating: 100%|██████████| 938/938 [01:29<00:00, 10.50it/s]
01/28/2025 10:40:46 - INFO - __main__ -   Saving model checkpoint to mnli_bert_base_fbert_imp_6epoch/bert_base/checkpoint-epoch--1
   mnli.acc  hans.acc
0  0.841977  0.695467

Iteration:   0%|          | 0/731 [00:00<?, ?it/s][A/home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/pytorch_transformers/optimization.py:166: UserWarning: This overload of add_ is deprecated:
	add_(Number alpha, Tensor other)
Consider using one of the following signatures instead:
	add_(Tensor other, *, Number alpha = 1) (Triggered internally at ../torch/csrc/utils/python_arg_parser.cpp:1642.)
  exp_avg.mul_(beta1).add_(1.0 - beta1, grad)

Loss: 0.477, Acc: 0.875:   5%|▍         | 33/731 [00:10<03:33,  3.27it/s][A
Loss: 0.350, Acc: 0.875:   9%|▉         | 67/731 [00:20<03:21,  3.30it/s][A
Loss: 0.394, Acc: 0.875:   9%|▉         | 67/731 [00:30<03:21,  3.30it/s][A
Loss: 0.394, Acc: 0.875:  14%|█▍        | 101/731 [00:30<03:09,  3.32it/s][A
Loss: 0.599, Acc: 0.812:  18%|█▊        | 135/731 [00:40<02:58,  3.33it/s][A
Loss: 0.402, Acc: 0.906:  23%|██▎       | 169/731 [00:51<02:49,  3.31it/s][A
Loss: 0.806, Acc: 0.719:  28%|██▊       | 202/731 [01:01<02:40,  3.30it/s][A
Loss: 0.335, Acc: 0.875:  32%|███▏      | 236/731 [01:11<02:29,  3.31it/s][A
Loss: 0.621, Acc: 0.750:  37%|███▋      | 270/731 [01:21<02:19,  3.31it/s][A
Loss: 0.374, Acc: 0.875:  42%|████▏     | 304/731 [01:32<02:09,  3.29it/s][A
Loss: 0.591, Acc: 0.750:  46%|████▌     | 337/731 [01:42<01:59,  3.29it/s][A
Loss: 0.499, Acc: 0.812:  51%|█████     | 371/731 [01:52<01:49,  3.30it/s][A
Loss: 0.588, Acc: 0.719:  55%|█████▌    | 405/731 [02:02<01:39,  3.28it/s][A
Loss: 0.457, Acc: 0.812:  60%|█████▉    | 438/731 [02:12<01:29,  3.28it/s][A
Loss: 0.361, Acc: 0.844:  65%|██████▍   | 472/731 [02:23<01:18,  3.30it/s][A
Loss: 0.339, Acc: 0.781:  69%|██████▉   | 506/731 [02:33<01:07,  3.31it/s][A
Loss: 0.556, Acc: 0.750:  74%|███████▍  | 540/731 [02:43<00:57,  3.31it/s][A
Loss: 0.423, Acc: 0.750:  79%|███████▊  | 574/731 [02:53<00:47,  3.30it/s][A
Loss: 0.195, Acc: 0.969:  83%|████████▎ | 607/731 [03:04<00:37,  3.29it/s][A
Loss: 0.245, Acc: 0.906:  88%|████████▊ | 640/731 [03:14<00:27,  3.28it/s][A
Loss: 0.420, Acc: 0.844:  92%|█████████▏| 674/731 [03:24<00:17,  3.30it/s][A
Loss: 0.390, Acc: 0.812:  97%|█████████▋| 708/731 [03:34<00:06,  3.29it/s][ALoss: 0.455, Acc: 0.871: 100%|██████████| 731/731 [03:41<00:00,  3.29it/s]
01/28/2025 10:44:28 - INFO - utils_data -   Loading features from cached file /home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI/cached_dev_bert-base-uncased_128_mnli
/home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/utils_data.py:36: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  features = torch.load(cached_features_file)
01/28/2025 10:44:30 - INFO - utils_data -   Dataset length: 9815.
01/28/2025 10:44:30 - INFO - __main__ -   ***** Running evaluation mnli *****
01/28/2025 10:44:30 - INFO - __main__ -     Num examples = 9815
01/28/2025 10:44:30 - INFO - __main__ -     Batch size = 32

Evaluating:   0%|          | 0/307 [00:00<?, ?it/s][AEvaluating: 100%|██████████| 307/307 [00:29<00:00, 10.31it/s]
01/28/2025 10:44:59 - INFO - utils_data -   Loading features from cached file /home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI/cached_dev_bert-base-uncased_128_hans
01/28/2025 10:45:00 - INFO - utils_data -   Dataset length: 30000.
01/28/2025 10:45:00 - INFO - __main__ -   ***** Running evaluation hans *****
01/28/2025 10:45:00 - INFO - __main__ -     Num examples = 30000
01/28/2025 10:45:00 - INFO - __main__ -     Batch size = 32

Evaluating:   0%|          | 0/938 [00:00<?, ?it/s][A
Evaluating:  65%|██████▍   | 607/938 [01:00<00:32, 10.12it/s][A
Evaluating:  65%|██████▍   | 607/938 [01:16<00:32, 10.12it/s][AEvaluating: 100%|██████████| 938/938 [01:32<00:00, 10.12it/s]
01/28/2025 10:46:34 - INFO - __main__ -   Saving model checkpoint to mnli_bert_base_fbert_imp_6epoch/bert_base/checkpoint-epoch-0
01/28/2025 10:46:34 - INFO - __main__ -   ***** Eval results mnli *****
01/28/2025 10:46:34 - INFO - __main__ -   mnli/acc = 0.8317880794701987
01/28/2025 10:46:34 - INFO - __main__ -   ***** Eval results hans *****
01/28/2025 10:46:34 - INFO - __main__ -   hans/acc = 0.7255
Epoch:  17%|█▋        | 1/6 [07:46<38:53, 466.65s/it]   mnli.acc  hans.acc
0  0.841977  0.695467
1  0.831788  0.725500

Iteration:   0%|          | 0/731 [00:00<?, ?it/s][A
Loss: 0.329, Acc: 0.875:   5%|▍         | 34/731 [00:10<03:26,  3.38it/s][A
Loss: 0.445, Acc: 0.812:   9%|▉         | 68/731 [00:20<03:16,  3.37it/s][A
Loss: 0.302, Acc: 0.875:  14%|█▍        | 102/731 [00:30<03:06,  3.37it/s][A
Loss: 0.598, Acc: 0.719:  19%|█▊        | 136/731 [00:40<02:57,  3.35it/s][A
Loss: 0.396, Acc: 0.875:  23%|██▎       | 170/731 [00:50<02:46,  3.36it/s][A
Loss: 0.329, Acc: 0.812:  28%|██▊       | 204/731 [01:00<02:37,  3.34it/s][A
Loss: 0.331, Acc: 0.844:  33%|███▎      | 238/731 [01:11<02:28,  3.33it/s][A
Loss: 0.362, Acc: 0.781:  37%|███▋      | 271/731 [01:21<02:19,  3.29it/s][A
Loss: 0.520, Acc: 0.812:  42%|████▏     | 304/731 [01:31<02:09,  3.29it/s][A
Loss: 0.447, Acc: 0.844:  46%|████▌     | 338/731 [01:41<01:58,  3.33it/s][A
Loss: 0.505, Acc: 0.750:  51%|█████     | 372/731 [01:51<01:48,  3.32it/s][A
Loss: 0.180, Acc: 0.969:  56%|█████▌    | 406/731 [02:01<01:38,  3.32it/s][A
Loss: 0.301, Acc: 0.875:  60%|██████    | 440/731 [02:12<01:27,  3.33it/s][A
Loss: 0.245, Acc: 0.875:  65%|██████▍   | 474/731 [02:22<01:16,  3.34it/s][A
Loss: 0.249, Acc: 0.875:  69%|██████▉   | 508/731 [02:32<01:06,  3.35it/s][A
Loss: 0.197, Acc: 0.906:  74%|███████▍  | 542/731 [02:42<00:56,  3.36it/s][A
Loss: 0.273, Acc: 0.875:  79%|███████▉  | 576/731 [02:52<00:46,  3.36it/s][A
Loss: 0.459, Acc: 0.812:  83%|████████▎ | 610/731 [03:02<00:36,  3.32it/s][A
Loss: 0.408, Acc: 0.844:  88%|████████▊ | 643/731 [03:12<00:26,  3.31it/s][A
Loss: 0.136, Acc: 0.938:  92%|█████████▏| 676/731 [03:23<00:16,  3.29it/s][A
Loss: 0.358, Acc: 0.875:  97%|█████████▋| 709/731 [03:33<00:06,  3.28it/s][ALoss: 0.343, Acc: 0.935: 100%|██████████| 731/731 [03:39<00:00,  3.32it/s]
01/28/2025 10:50:13 - INFO - utils_data -   Loading features from cached file /home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI/cached_dev_bert-base-uncased_128_mnli
/home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/utils_data.py:36: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  features = torch.load(cached_features_file)
01/28/2025 10:50:14 - INFO - utils_data -   Dataset length: 9815.
01/28/2025 10:50:14 - INFO - __main__ -   ***** Running evaluation mnli *****
01/28/2025 10:50:14 - INFO - __main__ -     Num examples = 9815
01/28/2025 10:50:14 - INFO - __main__ -     Batch size = 32

Evaluating:   0%|          | 0/307 [00:00<?, ?it/s][AEvaluating: 100%|██████████| 307/307 [00:29<00:00, 10.27it/s]
01/28/2025 10:50:44 - INFO - utils_data -   Loading features from cached file /home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI/cached_dev_bert-base-uncased_128_hans
01/28/2025 10:50:45 - INFO - utils_data -   Dataset length: 30000.
01/28/2025 10:50:45 - INFO - __main__ -   ***** Running evaluation hans *****
01/28/2025 10:50:45 - INFO - __main__ -     Num examples = 30000
01/28/2025 10:50:45 - INFO - __main__ -     Batch size = 32

Evaluating:   0%|          | 0/938 [00:00<?, ?it/s][A
Evaluating:  65%|██████▌   | 613/938 [01:00<00:31, 10.21it/s][A
Evaluating:  65%|██████▌   | 613/938 [01:12<00:31, 10.21it/s][AEvaluating: 100%|██████████| 938/938 [01:32<00:00, 10.20it/s]
01/28/2025 10:52:17 - INFO - __main__ -   Saving model checkpoint to mnli_bert_base_fbert_imp_6epoch/bert_base/checkpoint-epoch-1
01/28/2025 10:52:17 - INFO - __main__ -   ***** Eval results mnli *****
01/28/2025 10:52:17 - INFO - __main__ -   mnli/acc = 0.8246561385634233
01/28/2025 10:52:17 - INFO - __main__ -   ***** Eval results hans *****
01/28/2025 10:52:17 - INFO - __main__ -   hans/acc = 0.7299
Epoch:  33%|███▎      | 2/6 [13:30<26:16, 394.21s/it]   mnli.acc  hans.acc
0  0.841977  0.695467
1  0.831788  0.725500
2  0.824656  0.729900

Iteration:   0%|          | 0/731 [00:00<?, ?it/s][A
Loss: 0.164, Acc: 0.938:   5%|▍         | 33/731 [00:10<03:35,  3.24it/s][A
Loss: 0.256, Acc: 0.906:   9%|▉         | 66/731 [00:20<03:23,  3.27it/s][A
Loss: 0.368, Acc: 0.844:  14%|█▎        | 99/731 [00:30<03:12,  3.28it/s][A
Loss: 0.136, Acc: 0.938:  18%|█▊        | 133/731 [00:40<03:01,  3.30it/s][A
Loss: 0.328, Acc: 0.875:  23%|██▎       | 167/731 [00:50<02:49,  3.33it/s][A
Loss: 0.260, Acc: 0.938:  27%|██▋       | 201/731 [01:00<02:39,  3.32it/s][A
Loss: 0.472, Acc: 0.812:  32%|███▏      | 235/731 [01:11<02:30,  3.30it/s][A
Loss: 0.368, Acc: 0.844:  37%|███▋      | 268/731 [01:21<02:20,  3.30it/s][A
Loss: 0.281, Acc: 0.906:  41%|████▏     | 302/731 [01:31<02:09,  3.32it/s][A
Loss: 0.302, Acc: 0.844:  46%|████▌     | 336/731 [01:41<01:58,  3.33it/s][A
Loss: 0.080, Acc: 1.000:  51%|█████     | 370/731 [01:51<01:48,  3.32it/s][A
Loss: 0.092, Acc: 0.969:  55%|█████▌    | 404/731 [02:02<01:38,  3.31it/s][A
Loss: 0.497, Acc: 0.844:  60%|█████▉    | 438/731 [02:12<01:27,  3.33it/s][A
Loss: 0.214, Acc: 0.969:  65%|██████▍   | 472/731 [02:22<01:17,  3.35it/s][A
Loss: 0.323, Acc: 0.875:  69%|██████▉   | 506/731 [02:32<01:07,  3.36it/s][A
Loss: 0.241, Acc: 0.906:  74%|███████▍  | 540/731 [02:42<00:56,  3.36it/s][A
Loss: 0.195, Acc: 0.906:  79%|███████▊  | 574/731 [02:52<00:46,  3.37it/s][A
Loss: 0.295, Acc: 0.875:  83%|████████▎ | 608/731 [03:02<00:36,  3.37it/s][A
Loss: 0.269, Acc: 0.938:  88%|████████▊ | 642/731 [03:12<00:26,  3.37it/s][A
Loss: 0.169, Acc: 0.938:  92%|█████████▏| 676/731 [03:22<00:16,  3.36it/s][A
Loss: 0.201, Acc: 0.938:  97%|█████████▋| 710/731 [03:33<00:06,  3.34it/s][ALoss: 0.403, Acc: 0.839: 100%|██████████| 731/731 [03:39<00:00,  3.33it/s]
01/28/2025 10:55:57 - INFO - utils_data -   Loading features from cached file /home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI/cached_dev_bert-base-uncased_128_mnli
/home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/utils_data.py:36: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  features = torch.load(cached_features_file)
01/28/2025 10:55:57 - INFO - utils_data -   Dataset length: 9815.
01/28/2025 10:55:57 - INFO - __main__ -   ***** Running evaluation mnli *****
01/28/2025 10:55:57 - INFO - __main__ -     Num examples = 9815
01/28/2025 10:55:57 - INFO - __main__ -     Batch size = 32

Evaluating:   0%|          | 0/307 [00:00<?, ?it/s][AEvaluating: 100%|██████████| 307/307 [00:29<00:00, 10.28it/s]
01/28/2025 10:56:27 - INFO - utils_data -   Loading features from cached file /home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI/cached_dev_bert-base-uncased_128_hans
01/28/2025 10:56:29 - INFO - utils_data -   Dataset length: 30000.
01/28/2025 10:56:29 - INFO - __main__ -   ***** Running evaluation hans *****
01/28/2025 10:56:29 - INFO - __main__ -     Num examples = 30000
01/28/2025 10:56:29 - INFO - __main__ -     Batch size = 32

Evaluating:   0%|          | 0/938 [00:00<?, ?it/s][A
Evaluating:  66%|██████▌   | 621/938 [01:00<00:30, 10.34it/s][A
Evaluating:  66%|██████▌   | 621/938 [01:19<00:30, 10.34it/s][AEvaluating: 100%|██████████| 938/938 [01:31<00:00, 10.28it/s]
01/28/2025 10:58:00 - INFO - __main__ -   Saving model checkpoint to mnli_bert_base_fbert_imp_6epoch/bert_base/checkpoint-epoch-2
01/28/2025 10:58:00 - INFO - __main__ -   ***** Eval results mnli *****
01/28/2025 10:58:00 - INFO - __main__ -   mnli/acc = 0.8245542536933266
01/28/2025 10:58:00 - INFO - __main__ -   ***** Eval results hans *****
01/28/2025 10:58:00 - INFO - __main__ -   hans/acc = 0.7316666666666667
Epoch:  50%|█████     | 3/6 [19:13<18:32, 370.95s/it]   mnli.acc  hans.acc
0  0.841977  0.695467
1  0.831788  0.725500
2  0.824656  0.729900
3  0.824554  0.731667

Iteration:   0%|          | 0/731 [00:00<?, ?it/s][A
Loss: 0.234, Acc: 0.906:   5%|▍         | 33/731 [00:10<03:35,  3.23it/s][A
Loss: 0.194, Acc: 0.938:   9%|▉         | 67/731 [00:20<03:20,  3.31it/s][A
Loss: 0.283, Acc: 0.906:  14%|█▍        | 101/731 [00:30<03:09,  3.32it/s][A
Loss: 0.256, Acc: 0.875:  18%|█▊        | 135/731 [00:40<02:59,  3.32it/s][A
Loss: 0.141, Acc: 0.938:  23%|██▎       | 169/731 [00:50<02:48,  3.33it/s][A
Loss: 0.401, Acc: 0.875:  28%|██▊       | 203/731 [01:01<02:38,  3.34it/s][A
Loss: 0.207, Acc: 0.938:  32%|███▏      | 237/731 [01:11<02:27,  3.35it/s][A
Loss: 0.181, Acc: 0.906:  37%|███▋      | 271/731 [01:21<02:17,  3.35it/s][A
Loss: 0.182, Acc: 0.906:  42%|████▏     | 305/731 [01:31<02:06,  3.35it/s][A
Loss: 0.156, Acc: 0.906:  46%|████▋     | 339/731 [01:41<01:56,  3.36it/s][A
Loss: 0.355, Acc: 0.875:  51%|█████     | 373/731 [01:51<01:46,  3.36it/s][A
Loss: 0.276, Acc: 0.938:  56%|█████▌    | 407/731 [02:01<01:36,  3.36it/s][A
Loss: 0.245, Acc: 0.906:  60%|██████    | 441/731 [02:11<01:26,  3.36it/s][A
Loss: 0.239, Acc: 0.906:  65%|██████▍   | 475/731 [02:21<01:16,  3.36it/s][A
Loss: 0.311, Acc: 0.875:  70%|██████▉   | 509/731 [02:32<01:06,  3.34it/s][A
Loss: 0.067, Acc: 1.000:  74%|███████▍  | 543/731 [02:42<00:56,  3.34it/s][A
Loss: 0.084, Acc: 0.969:  79%|███████▉  | 577/731 [02:53<00:46,  3.29it/s][A
Loss: 0.519, Acc: 0.812:  83%|████████▎ | 610/731 [03:03<00:36,  3.27it/s][A
Loss: 0.366, Acc: 0.875:  88%|████████▊ | 644/731 [03:13<00:26,  3.29it/s][A
Loss: 0.132, Acc: 0.938:  93%|█████████▎| 678/731 [03:23<00:16,  3.31it/s][A
Loss: 0.292, Acc: 0.938:  97%|█████████▋| 712/731 [03:33<00:05,  3.32it/s][ALoss: 0.247, Acc: 0.903: 100%|██████████| 731/731 [03:39<00:00,  3.32it/s]
01/28/2025 11:01:40 - INFO - utils_data -   Loading features from cached file /home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI/cached_dev_bert-base-uncased_128_mnli
/home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/utils_data.py:36: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  features = torch.load(cached_features_file)
01/28/2025 11:01:41 - INFO - utils_data -   Dataset length: 9815.
01/28/2025 11:01:41 - INFO - __main__ -   ***** Running evaluation mnli *****
01/28/2025 11:01:41 - INFO - __main__ -     Num examples = 9815
01/28/2025 11:01:41 - INFO - __main__ -     Batch size = 32

Evaluating:   0%|          | 0/307 [00:00<?, ?it/s][AEvaluating: 100%|██████████| 307/307 [00:29<00:00, 10.36it/s]
01/28/2025 11:02:10 - INFO - utils_data -   Loading features from cached file /home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI/cached_dev_bert-base-uncased_128_hans
01/28/2025 11:02:11 - INFO - utils_data -   Dataset length: 30000.
01/28/2025 11:02:11 - INFO - __main__ -   ***** Running evaluation hans *****
01/28/2025 11:02:11 - INFO - __main__ -     Num examples = 30000
01/28/2025 11:02:11 - INFO - __main__ -     Batch size = 32

Evaluating:   0%|          | 0/938 [00:00<?, ?it/s][A
Evaluating:  65%|██████▍   | 608/938 [01:00<00:32, 10.13it/s][A
Evaluating:  65%|██████▍   | 608/938 [01:17<00:32, 10.13it/s][AEvaluating: 100%|██████████| 938/938 [01:31<00:00, 10.20it/s]
01/28/2025 11:03:44 - INFO - __main__ -   Saving model checkpoint to mnli_bert_base_fbert_imp_6epoch/bert_base/checkpoint-epoch-3
01/28/2025 11:03:44 - INFO - __main__ -   ***** Eval results mnli *****
01/28/2025 11:03:44 - INFO - __main__ -   mnli/acc = 0.8207845134997452
01/28/2025 11:03:44 - INFO - __main__ -   ***** Eval results hans *****
01/28/2025 11:03:44 - INFO - __main__ -   hans/acc = 0.7307666666666667
Epoch:  67%|██████▋   | 4/6 [24:56<12:00, 360.01s/it]   mnli.acc  hans.acc
0  0.841977  0.695467
1  0.831788  0.725500
2  0.824656  0.729900
3  0.824554  0.731667
4  0.820785  0.730767

Iteration:   0%|          | 0/731 [00:00<?, ?it/s][A
Loss: 0.235, Acc: 0.938:   5%|▍         | 34/731 [00:10<03:26,  3.37it/s][A
Loss: 0.140, Acc: 0.969:   9%|▉         | 68/731 [00:20<03:16,  3.37it/s][A
Loss: 0.273, Acc: 0.875:  14%|█▍        | 102/731 [00:30<03:06,  3.37it/s][A
Loss: 0.316, Acc: 0.938:  19%|█▊        | 136/731 [00:40<02:56,  3.38it/s][A
Loss: 0.107, Acc: 0.969:  23%|██▎       | 170/731 [00:50<02:46,  3.38it/s][A
Loss: 0.242, Acc: 0.938:  28%|██▊       | 204/731 [01:00<02:36,  3.38it/s][A
Loss: 0.185, Acc: 0.938:  33%|███▎      | 238/731 [01:11<02:28,  3.32it/s][A
Loss: 0.131, Acc: 0.969:  37%|███▋      | 271/731 [01:21<02:18,  3.31it/s][A
Loss: 0.320, Acc: 0.875:  42%|████▏     | 305/731 [01:31<02:07,  3.34it/s][A
Loss: 0.316, Acc: 0.906:  46%|████▋     | 339/731 [01:41<01:56,  3.35it/s][A
Loss: 0.334, Acc: 0.906:  51%|█████     | 373/731 [01:51<01:46,  3.35it/s][A
Loss: 0.293, Acc: 0.906:  56%|█████▌    | 407/731 [02:01<01:36,  3.35it/s][A
Loss: 0.121, Acc: 0.938:  60%|██████    | 441/731 [02:11<01:26,  3.35it/s][A
Loss: 0.307, Acc: 0.938:  65%|██████▍   | 475/731 [02:21<01:16,  3.35it/s][A
Loss: 0.105, Acc: 0.969:  70%|██████▉   | 509/731 [02:31<01:06,  3.35it/s][A
Loss: 0.076, Acc: 1.000:  74%|███████▍  | 543/731 [02:42<00:56,  3.35it/s][A
Loss: 0.442, Acc: 0.844:  79%|███████▉  | 577/731 [02:52<00:46,  3.30it/s][A
Loss: 0.391, Acc: 0.906:  83%|████████▎ | 610/731 [03:03<00:37,  3.27it/s][A
Loss: 0.423, Acc: 0.812:  88%|████████▊ | 642/731 [03:13<00:27,  3.24it/s][A
Loss: 0.266, Acc: 0.844:  92%|█████████▏| 675/731 [03:23<00:17,  3.23it/s][A
Loss: 0.264, Acc: 0.875:  97%|█████████▋| 708/731 [03:34<00:07,  3.18it/s][ALoss: 0.332, Acc: 0.903: 100%|██████████| 731/731 [03:41<00:00,  3.30it/s]
01/28/2025 11:07:25 - INFO - utils_data -   Loading features from cached file /home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI/cached_dev_bert-base-uncased_128_mnli
/home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/utils_data.py:36: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  features = torch.load(cached_features_file)
01/28/2025 11:07:25 - INFO - utils_data -   Dataset length: 9815.
01/28/2025 11:07:25 - INFO - __main__ -   ***** Running evaluation mnli *****
01/28/2025 11:07:25 - INFO - __main__ -     Num examples = 9815
01/28/2025 11:07:25 - INFO - __main__ -     Batch size = 32

Evaluating:   0%|          | 0/307 [00:00<?, ?it/s][AEvaluating: 100%|██████████| 307/307 [00:31<00:00,  9.87it/s]
01/28/2025 11:07:56 - INFO - utils_data -   Loading features from cached file /home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI/cached_dev_bert-base-uncased_128_hans
01/28/2025 11:07:57 - INFO - utils_data -   Dataset length: 30000.
01/28/2025 11:07:57 - INFO - __main__ -   ***** Running evaluation hans *****
01/28/2025 11:07:57 - INFO - __main__ -     Num examples = 30000
01/28/2025 11:07:57 - INFO - __main__ -     Batch size = 32

Evaluating:   0%|          | 0/938 [00:00<?, ?it/s][A
Evaluating:  63%|██████▎   | 595/938 [01:00<00:34,  9.90it/s][A
Evaluating:  63%|██████▎   | 595/938 [01:10<00:34,  9.90it/s][AEvaluating: 100%|██████████| 938/938 [01:33<00:00, 10.04it/s]
01/28/2025 11:09:31 - INFO - __main__ -   Saving model checkpoint to mnli_bert_base_fbert_imp_6epoch/bert_base/checkpoint-epoch-4
01/28/2025 11:09:31 - INFO - __main__ -   ***** Eval results mnli *****
01/28/2025 11:09:31 - INFO - __main__ -   mnli/acc = 0.8203769740193582
01/28/2025 11:09:31 - INFO - __main__ -   ***** Eval results hans *****
01/28/2025 11:09:31 - INFO - __main__ -   hans/acc = 0.7304333333333334
Epoch:  83%|████████▎ | 5/6 [30:44<05:55, 355.51s/it]   mnli.acc  hans.acc
0  0.841977  0.695467
1  0.831788  0.725500
2  0.824656  0.729900
3  0.824554  0.731667
4  0.820785  0.730767
5  0.820377  0.730433

Iteration:   0%|          | 0/731 [00:00<?, ?it/s][A
Loss: 0.144, Acc: 0.938:   5%|▍         | 34/731 [00:10<03:26,  3.37it/s][A
Loss: 0.284, Acc: 0.906:   9%|▉         | 68/731 [00:20<03:17,  3.36it/s][ALoss: 0.284, Acc: 0.906:   9%|▉         | 68/731 [00:20<03:20,  3.31it/s]
Epoch:  83%|████████▎ | 5/6 [31:04<06:12, 372.94s/it]
Traceback (most recent call last):
  File "/home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/exp_glue.py", line 668, in <module>
    main()
  File "/home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/exp_glue.py", line 655, in main
    train(args, train_dataset, model, tokenizer)
  File "/home/eleve/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/exp_glue.py", line 238, in train
    accuracy = (outputs[1].max(1)[1].detach().cpu() == inputs['labels'].detach().cpu()).float().mean()
KeyboardInterrupt
{'data_dir': '~/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI',
 'decay_learning_rate': 'True',
 'do_lower_case': 'True',
 'do_train': '',
 'hard_examples': 'mnli_bert_base/important_examples.pkl',
 'hard_type': 'forgettables_b',
 'learning_rate': 5e-06,
 'load_model': 'mnli_bert_base/checkpoint-last/',
 'model_name_or_path': 'bert-base-uncased',
 'model_type': 'bert',
 'num_train_epochs': 6,
 'output_dir': PosixPath('mnli_bert_base_fbert_imp_6epoch/bert_base'),
 'overwrite_output_dir': '',
 'per_gpu_eval_batch_size': '32',
 'per_gpu_train_batch_size': 32,
 'seed': 0,
 'task_name': 'mnli',
 'training_examples_ids': None}
python exp_glue.py --per_gpu_eval_batch_size 32 --per_gpu_train_batch_size 32 --num_train_epochs 6 --decay_learning_rate True --do_lower_case True --learning_rate 5e-06 --model_name_or_path bert-base-uncased --model_type bert --data_dir ~/Documents/robustness_to_spurious_correlation/robustness_to_spurious_correlation/mnli/MNLI --task_name mnli --do_train  --overwrite_output_dir  --load_model mnli_bert_base/checkpoint-last/ --output_dir mnli_bert_base_fbert_imp_6epoch/bert_base --seed 0 --training_examples_ids None --hard_examples mnli_bert_base/important_examples.pkl --hard_type forgettables_b
